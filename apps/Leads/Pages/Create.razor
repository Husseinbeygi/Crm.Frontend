@page "/leads/create"

@using Leads.Models.Leads;

@inject Services.LeadsService _leadService

<LoadingComponent Enabled="_isloading">
	<PageHeader BackIcon="true" Class="site-page-header" BackIconTemplate="icon">
		<PageHeaderTitle>Title</PageHeaderTitle>
		<PageHeaderSubtitle>This is a subtitle</PageHeaderSubtitle>
		<PageHeaderExtra>
			<Button>@(Resources.ButtonCaptions.Reset)</Button>
				<Button HtmlType="submit" OnClick="Save" Type="@ButtonType.Primary">@(Resources.ButtonCaptions.Save)</Button>
			</PageHeaderExtra>
			<PageHeaderContent>
				<Descriptions Size="small" Column="3">
					<DescriptionsItem Title="Created" Span="1">Lili Qu</DescriptionsItem>
					<DescriptionsItem Title="Association" Span="1"><a>421421</a></DescriptionsItem>
					<DescriptionsItem Title="Creation Time" Span="1">2017-01-10</DescriptionsItem>
					<DescriptionsItem Title="Effective Time" Span="1">2017-10-10</DescriptionsItem>
					<DescriptionsItem Title="Remarks" Span="2">
						Gonghu Road, Xihu District, Hangzhou, Zhejiang, China
					</DescriptionsItem>
				</Descriptions>
			</PageHeaderContent>
		</PageHeader>
		<div class="my-1">
			<Segmented Block Labels=@(_segmentdStatus) />
		</div>
		<div class="mt-2">
			<Leads.Forms.PrimaryForm Model="createModel" Options="Options" />
		</div>
	</LoadingComponent>

	@code {
	private bool _isloading = true;
	private List<string> _segmentdStatus = new();

	CreateLeadViewModel createModel = new();

	Leads.Models.ValueObjects.Options Options = new();

	RenderFragment icon =@<Icon Type="arrow-left" />;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		AdjustRightToLeft();
		await GetLeadOptions();
	}

	private async Task GetLeadOptions()
	{
		_isloading = true;

		Options = (await _leadService.GetAsync<Models.Response<Leads.Models.ValueObjects.Options>>("Leads/options")).data;

		foreach (var item in Options.leadStatus)
		{
			_segmentdStatus.Add(item.Name);
		}

		_isloading = false;
	}

	private void AdjustRightToLeft()
	{
		if (Thread.CurrentThread.CurrentUICulture.TextInfo.IsRightToLeft)
		{
			icon =@<Icon Type="arrow-right" />;
		}
	}

	private void Save()
	{
		Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(createModel));
	}

}
