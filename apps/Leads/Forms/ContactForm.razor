@using Leads.Models.Leads;
@using Models.ValueObjects;


<Form @ref="_contactForm" Model="Models"
   LabelColSpan="8"
   OnFinish="(() => Submit())"
   WrapperColSpan="16">
	<FormItem Label="@(Resources.DataDictionary.Salutation)">
		<Select Mode="default"
	DataSource="_salutation"
		@bind-Value="@context.Salutaion.Value"
	LabelName="@nameof(ValueObject.Name)"
	ValueName="@nameof(ValueObject.Value)">
		</Select>
	</FormItem>

	<FormItem Label="@(Resources.DataDictionary.FirstName)">
		<Input @bind-Value="@context.FirstName" />
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.LastName)">
		<Input @bind-Value="@context.LastName" />
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.Title)">
		<Input @bind-Value="@context.Title" />
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.Mobile)">
		<Input @bind-Value="@context.Mobile" />
	</FormItem >
	<FormItem Label="@(Resources.DataDictionary.EmailAddress)">
		<Input @bind-Value="@context.Email" Type="email" />
	</FormItem>
</Form>

@code {
	[Parameter]
	public CreateLeadViewModel Models { get; set; }

	[Parameter]
	public Models.ValueObjects.Options Options { get; set; }

	List<Models.ValueObjects.ValueObject> _salutation = new();

	private Form<Models.Leads.CreateLeadViewModel> _contactForm;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		_salutation = Options.salutation;

	}

	public void Validate()
	{
		_contactForm.Validate();
	}

	public bool Submit()
	{
		return true;
	}

}
