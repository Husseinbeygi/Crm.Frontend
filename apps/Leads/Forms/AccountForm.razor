@using Leads.Models.Leads;
@using Models.ValueObjects;


<Form @ref="_accountForm" Model="Models"
   LabelColSpan="8"
   OnFinish="(() => Submit())"
   WrapperColSpan="16">
	<FormItem Label="@(Resources.DataDictionary.CompanyName)">
		<Input @bind-Value="@context.Company" />
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.Web)">
		<Input @bind-Value="@context.Website" />
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.Indstry)">
		<Select Mode="default"
	DataSource="_industry"
		@bind-Value="@context.Industry.Value"
	LabelName="@nameof(ValueObject.Name)"
	ValueName="@nameof(ValueObject.Value)">
		</Select>
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.PhoneNumber)">
		<Input @bind-Value="@context.Phone" />
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.AnnualRevenue)">
		<Input @bind-Value="@context.AnnualRevenue" />
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.NumberOfEmployees)">
		<Input @bind-Value="@context.NumberOfEmployees" />
	</FormItem>

@*	<FormItem Label="@(Resources.DataDictionary.Address)">
		<Input @bind-Value="@context.Email" Type="email" />
	</FormItem>
*@</Form>

@code {
	[Parameter]
	public LeadsViewModel Models { get; set; }

	[Parameter]
	public Models.ValueObjects.Options Options { get; set; }


	List<Models.ValueObjects.ValueObject> _industry = new();

	public Form<Models.Leads.LeadsViewModel> _accountForm { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();
		_industry = Options.industry;
	}

	public void Validate()
	{
		_accountForm.Validate();
	}


	public bool Submit()
	{
		return true;
	}
}
