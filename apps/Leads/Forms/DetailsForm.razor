@using Leads.Models.Leads;
@using Models.ValueObjects;

<Form @ref="_detailsForm"
   Model="Models"
   OnFinish="(() => Submit())"
   LabelColSpan="8"
   WrapperColSpan="16">
	<FormItem Label="@(Resources.DataDictionary.LeadStatus)">
		<Select Mode="default"
	DataSource="_leadStatus"
		@bind-Value="@context.LeadStatus.Value"
	LabelName="@nameof(ValueObject.Name)"
	ValueName="@nameof(ValueObject.Value)">
		</Select>
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.LeadSource)">
		<Select Mode="default"
	DataSource="_leadSources"
		@bind-Value="@context.LeadSource.Value"
	LabelName="@nameof(ValueObject.Name)"
	ValueName="@nameof(ValueObject.Value)">
		</Select>
	</FormItem>
	<FormItem Label="@(Resources.DataDictionary.LeadSource)">
		<Select Mode="default"
	DataSource="_rating"
		@bind-Value="@context.Rating.Value"
	LabelName="@nameof(ValueObject.Name)"
	ValueName="@nameof(ValueObject.Value)">
		</Select>
	</FormItem>
</Form>

@code {
	List<Models.ValueObjects.ValueObject> _leadSources = new();
	List<Models.ValueObjects.ValueObject> _leadStatus = new();
	List<Models.ValueObjects.ValueObject> _rating = new();

	[Parameter]
	public LeadsViewModel Models { get; set; }

	[Parameter]
	public Models.ValueObjects.Options Options { get; set; }

	private Form<Models.Leads.LeadsViewModel> _detailsForm;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		_leadSources = Options.leadSource;
		_leadStatus = Options.leadStatus;
		_rating = Options.rating;
	}

	public void Validate()
	{
		_detailsForm?.Validate();
	}

	public bool Submit()
	{
		return true;
	}


}
