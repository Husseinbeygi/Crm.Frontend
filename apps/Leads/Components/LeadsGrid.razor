@inject Services.LeadsService _leadService



<LoadingComponent Enabled="_isloading">
	<div class="grid">
		<div class="grid-container">
			<BitDataGrid Items="@FilteredItems" ResizableColumns="true" Pagination="@pagination">

				<BitDataGridPropertyColumn Title="#"
			 Property="@(c => c.RowNumber)"
			 Sortable="true"
			 IsDefaultSort="BitDataGridSortDirection.Ascending">
				</BitDataGridPropertyColumn>


				<BitDataGridPropertyColumn Class="column--large"
			 Title="@(Resources.DataDictionary.FullName)"
			 Property="@(c => c.FullName)"
			 Sortable="true"
			 IsDefaultSort="BitDataGridSortDirection.Ascending">
				</BitDataGridPropertyColumn>

				<BitDataGridPropertyColumn Title="@(Resources.DataDictionary.Mobile)"
			 Property="@(c => c.Mobile)"
			 Sortable="true"
			 IsDefaultSort="BitDataGridSortDirection.Ascending">
				</BitDataGridPropertyColumn>

				<BitDataGridPropertyColumn Title="@(Resources.DataDictionary.Indstry)"
			 Property="@(c => c.Industry.Name)"
			 Sortable="true"
			 IsDefaultSort="BitDataGridSortDirection.Ascending">
				</BitDataGridPropertyColumn>

				<BitDataGridPropertyColumn Title="@(Resources.DataDictionary.LeadStatus)"
			 Property="@(c => c.LeadStatus.Name)"
			 Sortable="true"
			 IsDefaultSort="BitDataGridSortDirection.Ascending">
				</BitDataGridPropertyColumn>

				<BitDataGridPropertyColumn Title="OwnerId"
			 Property="@(c => c.OwnerId)"
			 Sortable="true"
			 IsDefaultSort="BitDataGridSortDirection.Ascending">
				</BitDataGridPropertyColumn>

			</BitDataGrid>
		</div>
		<BitDataGridPaginator Value="@pagination" />
	</div>
</LoadingComponent>

@code {
	private bool _isloading;
	public IQueryable<Models.LeadsViewModel> Leads { get; set; }

	string fullnameFilter = string.Empty;
	BitDataGridPaginationState pagination = new() { ItemsPerPage = 10 };
	IQueryable<Models.LeadsViewModel> FilteredItems =>
	Leads?.Where(x => x.FullName.Contains(fullnameFilter, StringComparison.CurrentCultureIgnoreCase));

	List<Models.LeadsViewModel> _leadsViewModels = new();

	protected async override Task OnInitializedAsync()
	{
		_isloading = true;
		await base.OnInitializedAsync();
		await GetLeadsAsync();
		_isloading = false;
	}

	public async Task GetLeadsAsync()
	{

		var _leadsResponse = await _leadService.GetAsync<Models.LeadResponse>("Leads");
		_leadsViewModels = _leadsResponse.data;
		Leads = _leadsViewModels.AsQueryable();

		int i = 1;
		foreach (var item in Leads)
		{
			item.RowNumber = i++;
		}
	}

}
