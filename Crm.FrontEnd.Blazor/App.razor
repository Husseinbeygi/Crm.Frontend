@using AntDesign
@using Crm.FrontEnd.Blazor.Pages.AuthorizingShared
@using Crm.FrontEnd.Blazor.Shared
@using Framework.HttpServices;
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Authentication

@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject TokenProvider tokenProvider
@inject AuthenticationStateProvider AuthenticationStateProvider

<CascadingAuthenticationState>
	<Router AppAssembly="@typeof(Program).Assembly"
   AdditionalAssemblies="new[] { typeof(Leads.Pages.Index).Assembly}">
		<Found Context="routeData">

			<AntContainer />

			<AuthorizeRouteView RouteData="@routeData"
		DefaultLayout="@typeof(Crm.FrontEnd.Blazor.Shared.Layouts.SecurityLayout)">
				<Authorizing>
					<AuthorizingLoadingComponent />
				</Authorizing>
				<NotAuthorized>
						<RedirectToLogin />
				</NotAuthorized>
			</AuthorizeRouteView>
		</Found>
		<NotFound>
			<LayoutView Layout="@typeof(Crm.FrontEnd.Blazor.Shared.Layouts.Ltr.LtrMainLayout)">
				<p class="mx-auto">
					Sorry, there is nothing at this address.
				</p>
			</LayoutView>
		</NotFound>
	</Router>
</CascadingAuthenticationState>


@code {
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var userCulture = authState.User.Claims
		.FirstOrDefault(x => x.Type == System.Security.Claims.ClaimTypes.Locality)?.Value ?? "en-US";

		var userUICulture = authState.User.Claims
				.FirstOrDefault(x => x.Type == "CurrentUICulture")?.Value ?? "en-US";

		var cultureInfo =
				new System.Globalization.CultureInfo(name: userCulture);
		var cultureUIInfo =
				new System.Globalization.CultureInfo(name: userUICulture);

		var js = (IJSInProcessRuntime)JS;
		var currentCulture = js.Invoke<string>("blazorCulture.get");

		Console.WriteLine(cultureInfo);
		Console.WriteLine(currentCulture);

		if (currentCulture != cultureInfo.Name)
		{

			js.InvokeVoid("blazorCulture.set", cultureInfo.Name);

			Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
		}
	}

}
